version: 2.1

#Commands works just like a function...
commands:
  greeting:
    description: this key is optional
    parameters:
      guest-name:
        default: "nana"
        type: string
    steps:
      - run: echo "Hello << parameters.guest-name >> "

executors:
  node-executor:
    docker:
      - image: circleci/node:13.8.0
  python-executor:
    docker:
      - image: cimg/python:3.10.0

jobs:
  say-hello:
    executor: node-executor # node executor in use
    steps:
      - checkout
      - run:
          name: "Say-Hello"
          # The initial pipe, |, indicates that there will be more than one line of shell commands.
          command: |
            echo 'Hey Hello!'
            echo 'Hows it going!'
      - run:
          command: |
            ls -al
            echo 'All Good!'

  respond-to-hello:
    executor: python-executor # python executor in use
    steps:
      - checkout
      #Command Use-Case
      - greeting:
          guest-name: "Henna"
      - run:
          command: |
            echo 'This Job is using python image'
            python --version  > python-version.txt
      - persist_to_workspace:
          root: ~/
          path: ~/python-version.txt

  print-python-version:
    executor: python-executor
    steps:
      - checkout
      - attach_woskspace:
          at: ~/
      - run cat python-version.txt

workflows:
  say-workflow:
    jobs:
      - say-hello
      - respond-to-hello:
          requires:
            - say-hello
